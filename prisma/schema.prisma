datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String            @id @default(cuid())
  name             String
  email            String            @unique
  createdAt        DateTime          @default(now())
  providerSettings ProviderSettings?
  availabilities   Availability[]
  appointments     Appointment[]
  GoogleAuth       GoogleAuth?
}

model ProviderSettings {
  id                  String  @id @default(cuid())
  providerId          String  @unique
  sessionDuration     Int
  bufferBefore        Int
  bufferAfter         Int
  price               Float
  allowOnline         Boolean
  allowInPerson       Boolean
  minHoursBeforeBook  Int
  minHoursBeforeResch Int
  provider            User    @relation(fields: [providerId], references: [id])
}

model Availability {
  id         String @id @default(cuid())
  providerId String
  dayOfWeek  Int
  startTime  String
  endTime    String
  provider   User   @relation(fields: [providerId], references: [id])

  @@index([providerId])
}

enum SessaoTipo {
  ONLINE
  PRESENCIAL
}

enum ApptStatus {
  HOLD
  CONFIRMADO
  CANCELADO
}

model Appointment {
  id         String     @id @default(cuid())
  providerId String
  userName   String
  userEmail  String
  tipo       SessaoTipo
  startUtc   DateTime
  endUtc     DateTime
  status     ApptStatus @default(HOLD)
  provider   User       @relation(fields: [providerId], references: [id])

  @@index([providerId, startUtc])
}

model GoogleAuth {
  id           String   @id @default(cuid())
  providerId   String   @unique
  accessToken  String
  refreshToken String
  expiryDate   DateTime
  scope        String?
  tokenType    String?

  provider User @relation(fields: [providerId], references: [id])
}
